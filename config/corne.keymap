/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        FunctionKeyF11: FunctionKeyF11 {
            compatible = "zmk,behavior-mod-morph";
            label = "FUNCTIONKEYF11";
            bindings = <&pprint PRINTSCREEN P>, <&kp F11>;

            #binding-cells = <0>;
            mods = <(MOD_LGUI)>;
            keep-mods = <(MOD_LCTL)>;
        };

        FunctionKeyF12: FunctionKeyF12 {
            compatible = "zmk,behavior-mod-morph";
            label = "FUNCTIONKEYF12";
            bindings = <&backdelete>, <&kp F12>;

            #binding-cells = <0>;
            mods = <(MOD_LGUI)>;
            keep-mods = <(MOD_LCTL)>;
        };

        FunctionKeyF10: FunctionKeyF10 {
            compatible = "zmk,behavior-mod-morph";
            label = "FUNCTIONKEYF10";
            bindings = <&kp O>, <&kp F10>;

            #binding-cells = <0>;
            mods = <(MOD_LGUI)>;
            keep-mods = <(MOD_LCTL)>;
        };

        FunctionKeyF9: FunctionKeyF9 {
            compatible = "zmk,behavior-mod-morph";
            label = "FUNCTIONKEYF9";
            bindings = <&kp I>, <&kp F9>;

            #binding-cells = <0>;
            mods = <(MOD_LGUI)>;
            keep-mods = <(MOD_LCTL)>;
        };

        FunctionKeyF8: FunctionKeyF8 {
            compatible = "zmk,behavior-mod-morph";
            label = "FUNCTIONKEYF8";
            bindings = <&kp U>, <&kp F8>;

            #binding-cells = <0>;
            mods = <(MOD_LGUI)>;
            keep-mods = <(MOD_LCTL)>;
        };

        FunctionKeyF7: FunctionKeyF7 {
            compatible = "zmk,behavior-mod-morph";
            label = "FUNCTIONKEYF7";
            bindings = <&kp Y>, <&kp F7>;

            #binding-cells = <0>;
            mods = <(MOD_LGUI)>;
            keep-mods = <(MOD_LCTL)>;
        };

        FunctionKeyF6: FunctionKeyF6 {
            compatible = "zmk,behavior-mod-morph";
            label = "FUNCTIONKEYF6";
            bindings = <&kp T>, <&kp F6>;

            #binding-cells = <0>;
            mods = <(MOD_LGUI)>;
            keep-mods = <(MOD_LCTL)>;
        };

        FunctionKeyF5: FunctionKeyF5 {
            compatible = "zmk,behavior-mod-morph";
            label = "FUNCTIONKEYF5";
            bindings = <&kp R>, <&kp F5>;

            #binding-cells = <0>;
            mods = <(MOD_LGUI)>;
            keep-mods = <(MOD_LCTL)>;
        };

        FunctionKeyF4: FunctionKeyF4 {
            compatible = "zmk,behavior-mod-morph";
            label = "FUNCTIONKEYF4";
            bindings = <&kp E>, <&kp F4>;

            #binding-cells = <0>;
            mods = <(MOD_LGUI)>;
            keep-mods = <(MOD_LCTL)>;
        };

        FunctionKeyF3: FunctionKeyF3 {
            compatible = "zmk,behavior-mod-morph";
            label = "FUNCTIONKEYF3";
            bindings = <&kp W>, <&kp F3>;

            #binding-cells = <0>;
            mods = <(MOD_LGUI)>;
            keep-mods = <(MOD_LCTL)>;
        };

        FunctionKeyF2: FunctionKeyF2 {
            compatible = "zmk,behavior-mod-morph";
            label = "FUNCTIONKEYF2";
            bindings = <&kp Q>, <&kp F2>;

            #binding-cells = <0>;
            mods = <(MOD_LGUI)>;
            keep-mods = <(MOD_LCTL)>;
        };

        FunctionKeyF1: FunctionKeyF1 {
            compatible = "zmk,behavior-mod-morph";
            label = "FUNCTIONKEYF1";
            bindings = <&kp TAB>, <&kp F1>;

            #binding-cells = <0>;
            mods = <(MOD_LGUI)>;
            keep-mods = <(MOD_LCTL)>;
        };

        backdelete: backdelete {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKDELETE";
            bindings = <&kp BACKSPACE>, <&kp DELETE>;

            #binding-cells = <0>;
            mods = <(MOD_RALT)>;
        };

        pprint: pprint {
            compatible = "zmk,behavior-hold-tap";
            label = "PPRINT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&FunctionKeyF1      &FunctionKeyF2  &FunctionKeyF3  &FunctionKeyF4  &FunctionKeyF5  &FunctionKeyF6    &FunctionKeyF7  &FunctionKeyF8  &FunctionKeyF9  &FunctionKeyF10  &FunctionKeyF11  &FunctionKeyF12
&kp LCTRL           &kp A           &kp S           &kp D           &kp F           &kp G             &kp H           &kp J           &kp K           &kp L            &kp SEMI         &kp SQT
&mt LSHFT CAPSLOCK  &kp Z           &kp X           &kp C           &kp V           &kp B             &kp N           &kp M           &kp COMMA       &kp DOT          &kp FSLH         &kp ESC
                                                    &kp LGUI        &mo 1           &kp SPACE         &kp RET         &mo 2           &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |   4   |  5  |   |  6  |  7  |  8  |  9  |  0  |  DEL |
            // | CTRL| BT1 | BT2 | BT3 |  BT4  | BT5 |   | LFT | DWN |  UP | RGT |  [  |  L4  |
            // | SHFT |     |     |     |       |     |   |     |     |     |     |     |      |
            //                    | GUI | BTCLR | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB             &kp N1          &kp N2           &kp N3      &kp N4        &kp N5          &kp N6        &kp N7          &kp N8        &kp N9        &kp N0        &kp DEL
&kp LCTRL           &kp C_PREVIOUS  &mt C_MUTE C_PP  &kp C_NEXT  &kp C_VOL_DN  &kp C_VOL_UP    &kp LEFT      &kp DOWN        &kp UP        &kp RIGHT     &kp LBKT      &kp RIGHT_BRACKET
&mt LSHFT CAPSLOCK  &none           &none            &none       &none         &none           &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR
                                                     &kp LGUI    &none         &kp SPACE       &kp RET       &bt BT_CLR_ALL  &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |      |      |     |   7   |  8  |  9  |   |  F1  |  F2  |  F3  |  F4  |  F5  |   F6   |
            // | CTRL |      |     |   4   |  5  |  6  |   |  F7  |  F8  |  F9  |  F10 | F11  |   F12  |
            // | CLCK |  L1  |  0  |   1   |  2  |  3  |   |  LFT |  DWN |  UP  |  RGT |      |        |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB                  &kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT    &kp CARET       &kp AMPERSAND  &kp ASTERISK      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &backdelete
&kp LCTRL                &none            &none        &none     &none       &none          &kp MINUS       &kp EQUAL      &kp LEFT_BRACKET  &kp RIGHT_BRACKET     &kp BACKSLASH          &kp GRAVE
&mt LEFT_SHIFT CAPSLOCK  &none            &none        &none     &none       &none          &kp UNDERSCORE  &kp PLUS       &kp LEFT_BRACE    &kp RIGHT_BRACE       &kp PIPE               &kp TILDE
                                                       &kp LGUI  &trans      &kp SPACE      &kp RET         &trans         &kp RALT
            >;
        };
    };
};
